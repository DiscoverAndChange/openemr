name: Inferno Certification Test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

permissions:
  contents: read

jobs:
  check_secret:
    runs-on: ubuntu-24.04
    name: Check Required Secret
    outputs:
      has_inferno_pat: ${{ steps.check.outputs.has_inferno_pat }}
    steps:
    - name: Check if INFERNO_PAT is available
      id: check
      run: |
        if [[ -n '${{ secrets.INFERNO_PAT }}' ]]; then
          echo 'INFERNO_PAT secret is available. Proceeding with tests.'
          echo 'has_inferno_pat=true' >> "$GITHUB_OUTPUT"
        else
          echo '::warning::INFERNO_PAT secret is not set. Inferno certification tests will be skipped.'
          echo 'To run these tests, please set the INFERNO_PAT secret in your repository settings.'
          echo 'has_inferno_pat=false' >> "$GITHUB_OUTPUT"
        fi

  inferno_certification_test:
    needs: check_secret
    runs-on: ubuntu-24.04
    name: Inferno Certification Test
    timeout-minutes: 180  # 3 hours timeout due to potential terminology downloads
    if: needs.check_secret.outputs.has_inferno_pat == 'true'
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        token: ${{ secrets.INFERNO_PAT }}

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'

    - name: Get composer cache directory
      id: composer-cache
      run: |
        {
          printf 'dir='
          composer config cache-files-dir
        } >> "$GITHUB_OUTPUT"

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install npm package
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Get NPM Cache Directory
      id: npm-cache-dir
      run: |
        {
          printf 'dir='
          npm config get cache
        } >> "$GITHUB_OUTPUT"

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM CI
      run: npm ci

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log Docker info
      run: |
        docker --version
        docker compose version

    - name: Install OpenEMR-cmd
      run: |
        mkdir -p "$HOME/bin"
        curl -sSfL https://raw.githubusercontent.com/openemr/openemr-devops/master/utilities/openemr-cmd/openemr-cmd > "$HOME/bin/openemr-cmd"
        chmod +x "$HOME/bin/openemr-cmd"
        # add the command to default path so will be found and run.sh can still be used locally

    - name: Run Inferno Certification Tests
      working-directory: ci/inferno
      shell: bash
      run: |
        echo 'Starting Inferno certification test suiteâ€¦'
        ./run.sh
        echo 'Inferno certification tests completed successfully'

    - name: Cleanup Docker resources
      if: always()
      run: |
        docker compose -f ci/inferno/compose.yml down --volumes --remove-orphans || true
        docker system prune -f || true
