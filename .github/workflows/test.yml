name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:

  build_apache_83_116:
    name: PHP 8.3 - Apache - MariaDB 11.6 (Rolling version)
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_116
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
            echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache directory
        # this must run only after setup-node
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test_unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test_e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test_api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test_fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test_services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test_validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test_controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test_common
        if: ${{ success() || failure() }}

      - uses: actions/upload-artifact@v4
        with:
            name: htmlcov
            path: ./htmlcov/
