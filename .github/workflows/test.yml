name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

env:
    ENABLE_COVERAGE: "false"

jobs:

  build_apache_82_114:
    name: PHP 8.2 - Apache - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_82_114
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml


  build_apache_83_116:
    name: PHP 8.3 - Apache - MariaDB 11.6 (Rolling version)
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_116
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
      ENABLE_COVERAGE: "true"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_114:
    name: PHP 8.3 - Apache - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_114
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_1011:
    name: PHP 8.3 - Apache - MariaDB 10.11
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_1011
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_106:
    name: PHP 8.3 - Apache - MariaDB 10.6
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_106
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_105:
    name: PHP 8.3 - Apache - MariaDB 10.5
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_105
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_84:
    name: PHP 8.3 - Apache - MySQL 8.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_84
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start
          sleep 60

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_80:
    name: PHP 8.3 - Apache - MySQL 8.0
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_80
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start
          sleep 60

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_apache_83_57:
    name: PHP 8.3 - Apache - MySQL 5.7
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: apache_83_57
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
      CHROMIUM_INSTALL: "apk update; apk add --no-cache chromium chromium-chromedriver; export PANTHER_CHROME_DRIVER_BINARY=/usr/lib/chromium/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start
          sleep 60

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_nginx_82:
    name: PHP 8.2 - Nginx - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: nginx_82
      OPENEMR_DIR: /usr/share/nginx/html/openemr
      CHROMIUM_INSTALL: "apt-get update; apt-get install -y chromium-driver; export PANTHER_CHROME_DRIVER_BINARY=/usr/bin/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_nginx_83:
    name: PHP 8.3 - Nginx - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: nginx_83
      OPENEMR_DIR: /usr/share/nginx/html/openemr
      CHROMIUM_INSTALL: "apt-get update; apt-get install -y chromium-driver; export PANTHER_CHROME_DRIVER_BINARY=/usr/bin/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_nginx_84:
    name: PHP 8.4 - Nginx - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: nginx_84
      OPENEMR_DIR: /usr/share/nginx/html/openemr
      CHROMIUM_INSTALL: "apt-get update; apt-get install -y chromium-driver; export PANTHER_CHROME_DRIVER_BINARY=/usr/bin/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}

      - name: Combine coverage
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        run: |
          . ci/ciLibrary.source
          merge_coverage

      - name: Check if coverage files exist
        if: ${{ env.ENABLE_COVERAGE == 'true' && (success() || failure()) }}
        id: check-files
        run: |
          echo "clover_exists=$(test -f coverage.clover.xml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "htmlcov_exists=$(test -d ./htmlcov && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
        with:
          name: coverage.clover.xml
          path: coverage.clover.xml

      - uses: actions/upload-artifact@v4
        if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.htmlcov_exists == 'true' && (success() || failure()) }}
        with:
          name: htmlcov
          path: ./htmlcov/

      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.ENABLE_COVERAGE == 'true' && steps.check-files.outputs.clover_exists == 'true' && (success() || failure()) }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.clover.xml

  build_nginx_85:
    name: PHP 8.5 - Nginx - MariaDB 11.4
    runs-on: ubuntu-22.04
    env:
      DOCKER_DIR: nginx_85
      OPENEMR_DIR: /usr/share/nginx/html/openemr
      CHROMIUM_INSTALL: "apt-get update; apt-get install -y chromium-driver; export PANTHER_CHROME_DRIVER_BINARY=/usr/bin/chromedriver"
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.5'

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Main build
        run: |
          source ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          source ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          source ci/ciLibrary.source
          dockers_env_start

      - name: Install and configure
        run: |
          source ci/ciLibrary.source
          install_configure

      - name: Prepare for coverage reporting
        if: ${{ env.ENABLE_COVERAGE == 'true' }}
        run: |
          source ci/ciLibrary.source
          configure_coverage

      - name: Unit testing
        run: |
          source ci/ciLibrary.source
          build_test unit
        if: ${{ success() || failure() }}

      - name: E2e testing
        run: |
          source ci/ciLibrary.source
          build_test e2e
        if: ${{ success() || failure() }}

      - name: Api testing
        run: |
          source ci/ciLibrary.source
          build_test api
        if: ${{ success() || failure() }}

      - name: Fixtures testing
        run: |
          source ci/ciLibrary.source
          build_test fixtures
        if: ${{ success() || failure() }}

      - name: Services testing
        run: |
          source ci/ciLibrary.source
          build_test services
        if: ${{ success() || failure() }}

      - name: Validators testing
        run: |
          source ci/ciLibrary.source
          build_test validators
        if: ${{ success() || failure() }}

      - name: Controllers testing
        run: |
          source ci/ciLibrary.source
          build_test controllers
        if: ${{ success() || failure() }}

      - name: Common testing
        run: |
          source ci/ciLibrary.source
          build_test common
        if: ${{ success() || failure() }}
