#!/bin/bash
#
# Copyright (C) 2020 Brady Miller <brady.g.miller@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Bash library for openemr ci
#

set -xeuo pipefail

composer_github_auth() {
    githubToken=$(base64 --decode <<< MjE2OTcwOGE2MmM5ZWRiMzA3NGFmNGVjMmZkOGE0MWY2YzVkMDJhZgo=)
    githubTokenRateLimitRequest=$(curl -H "Authorization: token $githubToken" https://api.github.com/rate_limit)
    githubTokenRateLimit=$(jq '.rate.remaining' <<< "$githubTokenRateLimitRequest")
    echo "Number of github api requests remaining is $githubTokenRateLimit"
    if (( githubTokenRateLimit > 500 )); then
        echo 'Trying to use composer github api token'
        if composer config --global --auth github-oauth.github.com "$githubToken"; then
            echo "github composer token worked"
        else
            echo "github composer token did not work"
        fi
    else
        echo "Not using composer github api token"
    fi
}

##
# Technically dc is a calculator command in linux,
# but it's rarely used in the same context as docker compose.
dc() {
    docker compose --project-directory "ci/${DOCKER_DIR}" "$@"
}

_exec() {
    dc exec --workdir "${OPENEMR_DIR}" openemr "$@"
}

dockers_env_start() {
    dc up --detach
}

main_build() {
    # TODO, figure out how not to require the below line (maybe chown or something like that)
    sudo chmod -R 0777 .
    composer install
    npm install
    npm run build
    composer global require phing/phing
    "$HOME/.composer/vendor/bin/phing" vendor-clean
    "$HOME/.composer/vendor/bin/phing" assets-clean
    composer global remove phing/phing
    composer dump-autoload -o
    rm -fr node_modules
}

ccda_build() (
    cd ccdaservice
    npm install
)

install_configure() {
    sudo chmod 666 sites/default/sqlconf.php
    sudo chmod -R 777 sites/default/documents
    sed -e 's@^exit;@ @' < contrib/util/installScripts/InstallerAuto.php > contrib/util/installScripts/InstallerAutoTemp.php
    _exec php -f ./contrib/util/installScripts/InstallerAutoTemp.php rootpass=root server=mysql loginhost=%
    _exec rm -f ./contrib/util/installScripts/InstallerAutoTemp.php
    _exec mysql -u openemr --password="openemr" -h mysql -e 'INSERT INTO product_registration (opt_out) VALUES (1)' openemr
    _exec mysql -u openemr --password="openemr" -h mysql -e 'UPDATE globals SET gl_value = 1 WHERE gl_name = "rest_api"' openemr
    _exec mysql -u openemr --password="openemr" -h mysql -e 'UPDATE globals SET gl_value = 1 WHERE gl_name = "rest_fhir_api"' openemr
    _exec mysql -u openemr --password="openemr" -h mysql -e 'UPDATE globals SET gl_value = 1 WHERE gl_name = "rest_portal_api"' openemr
    _exec mysql -u openemr --password="openemr" -h mysql -e 'UPDATE globals SET gl_value = 3 WHERE gl_name = "oauth_password_grant"' openemr
    _exec mysql -u openemr --password="openemr" -h mysql -e 'UPDATE globals SET gl_value = 1 WHERE gl_name = "rest_system_scopes_api"' openemr
}

build_test_e2e() {
    _exec sh -c "${CHROMIUM_INSTALL}; export PANTHER_NO_SANDBOX=1; export PANTHER_CHROME_ARGUMENTS='--disable-dev-shm-usage'; php ./vendor/bin/phpunit --testsuite e2e --testdox"
}

phpunit() {
    _exec php ./vendor/bin/phpunit --testdox "$@"
}

build_test_unit() {
    phpunit --testsuite unit
}

build_test_api() {
    phpunit --testsuite api
}

build_test_fixtures() {
    phpunit --testsuite fixtures
}

build_test_services() {
    phpunit --testsuite services
}

build_test_validators() {
    phpunit --testsuite validators
}

build_test_controllers() {
    phpunit --testsuite controllers
}

build_test_common() {
    phpunit --testsuite common
}
